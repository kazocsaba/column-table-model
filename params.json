{"google":"","body":"Column Table Model\r\n==================\r\n\r\nIntroduction\r\n------------\r\n\r\n`ColumnTableModel` is an extension of `AbstractTableModel` that reorganizes the data and functions that conceptually belong to a column.\r\n\r\nUsing `AbstractTableModel`, a simple table can be implemented like this:\r\n\r\n\tpublic class StringsTableModel extends AbstractTableModel {\r\n\t\tprivate final List<String> data=new ArrayList<>();\r\n\t\t\r\n\t\t@Override\r\n\t\tpublic int getColumnCount() {\r\n\t\t\treturn 3;\r\n\t\t}\r\n\t\t@Override\r\n\t\tpublic Object getColumnName(int col) {\r\n\t\t\tswitch (col) {\r\n\t\t\t\tcase 0: return \"Index\";\r\n\t\t\t\tcase 1: return \"String\";\r\n\t\t\t\tcase 2: return \"Hash\";\r\n\t\t\t\tdefault: throw new IndexOutOfBoundsException();\r\n\t\t\t}\r\n\t\t}\r\n\t\t@Override\r\n\t\tpublic Object getValueAt(int row, int col) {\r\n\t\t\tswitch (col) {\r\n\t\t\t\tcase 0: return row+1;\r\n\t\t\t\tcase 1: return data.get(row);\r\n\t\t\t\tcase 2: return data.get(row).hashCode();\r\n\t\t\t\tdefault: throw new IndexOutOfBoundsException();\r\n\t\t\t}\r\n\t\t}\r\n\t\t@Override\r\n\t\tpublic Object getColumnClass(int col) {\r\n\t\t\tswitch (col) {\r\n\t\t\t\tcase 0: return Integer.class;\r\n\t\t\t\tcase 1: return String.class;\r\n\t\t\t\tcase 2: return Integer.class;\r\n\t\t\t\tdefault: throw new IndexOutOfBoundsException();\r\n\t\t\t}\r\n\t\t}\r\n\t\t@Override\r\n\t\tpublic boolean isCellEditable(int row, int col) {\r\n\t\t\treturn col==1;\r\n\t\t}\r\n\t\t@Override\r\n\t\tpublic void setValueAt(Object value, int row, int col) {\r\n\t\t\tif (col==1) {\r\n\t\t\t\tdata.set(row, (String)value);\r\n\t\t\t\tfireTableRowsUpdated(row, row);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\nEspecially when the model contains more columns, this code becomes hard to maintain. The columns are identified by their indices, and data belonging to a particular column is spread over several functions. For example, changing the order of the columns requires rewriting a lot of indices in the model functions; it is easy to make a mistake.\r\n\r\nExample\r\n-------\r\n\r\n`ColumnTableModel` groups the code belonging to each column into a `Column` class. The following example class implements the same model as the above, but using `ColumnTableModel`:\r\n\r\n\tpublic class StringsTableModel extends ColumnTableModel {\r\n\t\tprivate final List<String> data=new ArrayList<>();\r\n\t\t\r\n\t\tpublic final Column indexColumn=new Column(\"Index\", Integer.class) {\r\n\t\t\t@Override\r\n\t\t\tpublic Object get(int row) {\r\n\t\t\t\treturn row+1;\r\n\t\t\t}\r\n\t\t};\r\n\t\tpublic final Column stringColumn=new Column(\"Value\", String.class, true) {\r\n\t\t\t@Override\r\n\t\t\tpublic Object get(int row) {\r\n\t\t\t\treturn data.get(row);\r\n\t\t\t}\r\n\t\t\t@Override\r\n\t\t\tpublic void set(Object value, int row) {\r\n\t\t\t\tdata.set(row, (String)value);\r\n\t\t\t\tfireTableRowsUpdated(row, row);\r\n\t\t\t}\r\n\t\t};\r\n\t\tpublic final Column hashColumn=new Column(\"Hash\", Integer.class) {\r\n\t\t\t@Override\r\n\t\t\tpublic Object get(int row) {\r\n\t\t\t\treturn data.get(row).hashCode();\r\n\t\t\t}\r\n\t\t};\r\n\t\t\r\n\t\tpublic StringsTableModel() {\r\n\t\t\taddColumns(indexColumn, stringColumn, hashColumn);\r\n\t\t}\r\n\r\n\t\t@Override\r\n\t\tpublic int getRowCount() {\r\n\t\t\treturn data.size();\r\n\t\t}\r\n\t}\r\n\r\nUsing\r\n-----\r\n\r\nThe library resides in the central Maven repository with\r\ngroup ID `hu.kazocsaba` and artifact ID `column-table-model`. If\r\nyou use a project management system which can fetch dependencies\r\nfrom there, you can just add the library as a dependency. E.g.\r\nin Maven:\r\n\r\n\t<dependency>\r\n\t\t<groupId>hu.kazocsaba</groupId>\r\n\t\t<artifactId>column-table-model</artifactId>\r\n\t\t<version>1.0.0</version>\r\n\t</dependency>\r\n\r\nYou can also browse the [online javadoc](http://kazocsaba.github.com/column-table-model/apidocs/index.html).\r\n","tagline":"A column-wise defined table model.","note":"Don't delete this file! It's used internally to help with page regeneration.","name":"Column Table Model"}